import java.util.*;

abstract class Robber {
    void RobbingClass(){
        System.out.println("Msc AI&ML");

    }

    void MachineLearning() {
        System.out.println("I love machinelearning");
    }
}

class JAVAProfessionalRobber extends Robber {
    int RowHouses() {
        Scanner scanner = new Scanner(System.in);

        int[] rowmoney = new int[4];
        System.out.println("Enter 4 numbers for the row array:");
        for (int i = 0; i < rowmoney.length; i++) {
            rowmoney[i] = scanner.nextInt();
        }
        int even = 0;
        int odd = 0;

        for (int i = 0; i < rowmoney.length; i++) {
            if (i % 2 == 0) {
                even += rowmoney[i];
            } else {
                odd += rowmoney[i];
            }
        }

        int largest = Math.max(even, odd);
        System.out.println("The maximum amount that can be robbed without getting caught in row is " + largest);
        return largest;

    }

    int RoundHouses() {
        Scanner scanner = new Scanner(System.in);

        int[] roundmoney = new int[4];
        System.out.println("Enter 4 numbers for the circular array:");
        for (int i = 0; i < roundmoney.length; i++) {
            roundmoney[i] = scanner.nextInt();
        }
        int even = 0;
        int odd = 0;

        for (int i = 0; i < roundmoney.length; i++) {
            if (i % 2 == 0) {
                even += roundmoney[i];
            } else {
                odd += roundmoney[i];
            }
        }

        int largest = Math.max(even, odd);
        System.out.println("The maximum amount that can be robbed without getting caught in round is " + largest);
        return largest;
    }

    int SquareHouse() {
        Scanner scanner = new Scanner(System.in);

        int[] squaremoney = new int[4];
        System.out.println("Enter 4 numbers for the square array:");
        for (int i = 0; i < squaremoney.length; i++) {
            squaremoney[i] = scanner.nextInt();
        }
        scanner.close();
        int even = 0;
        int odd = 0;

        for (int i = 0; i < squaremoney.length; i++) {
            if (i % 2 == 0) {
                even += squaremoney[i];
            } else {
                odd += squaremoney[i];
            }
        }

        int largest = Math.max(even, odd);
        System.out.println("The maximum amount that can be robbed without getting caught in square is " + largest);
        return largest;
    }

    int MultiHouseBuilding(int[] multimoney) {
        return 0;
    }
    
}

public class Main {
    public static void main(String[] args) {
        JAVAProfessionalRobber robber = new JAVAProfessionalRobber();
        robber.RobbingClass();
        robber.MachineLearning();
        robber.RowHouses();
        robber.RoundHouses();
        robber.SquareHouse();
    }
}

